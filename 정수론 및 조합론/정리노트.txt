▶ 5086.cs (최하)
약수인지 배수인지 혹은 둘다아닌지 판별하는 기초 문제

▶ 1037.cs (하)
정답률이 생각보다 낮길래 트릭이 있을까 했지만, 제출해보니 곧바로 정답이었던 문제다.
문제는 N의 (1, N을 제외한)약수가 주어질때 N을 구하는 문제였다.
잠깐 고민해보니 주어진 약수들을 정렬하고 가장 작은 수  x  가장 큰 수 를 연산하면
N이 나올것이라는것을 파악할 수 있었다.

▶ 1934.cs 2609.cs (하)
최대공약수, 최소공배수 구하는 코드를 복기할 수 있던 문제.

-> 유클리드 알고리즘 이용
임의의 두 자연수 a, b가 주어졌을때. 둘중 큰 값이 a라고 가정해보겠습니다.

a를 b로 나눈 나머지를 n 이라고 하면 (a%b = n)

n이 0일때, b가 최대 공약수(GCD)입니다.

만약 n이 0이 아니라면, a에 b값을 다시 넣고 n를 b에 대입 한 후 다시 위에 step2부터 반복하면 됩니다.


▶ 3036.cs (하)
모든 원들을 붙여 세우고, 맨 첫번째 원을 한바퀴 돌릴 때 나머지 원들은 몇바퀴 도는지 구하는 문제
원주는 2PIr인것을 사용해도되지만 어차피 약분되기 때문에, 반지름만 가지고 계산이 가능하다.
반지름이 12인 원이 한바퀴 돌때 반지름이 3인 원이 붙어서 함께 돌았다면 12 / 3 바퀴만큼 즉 4바퀴 만큼
돌게되었을 것이다. 이때 해당 값을 기약분수로 나타내서 출력해줘야하기 때문에, 두 수의 최대공약수로 
나누어준 후 출력하면 된다.

▶ 11050.cs (최하)
https://rh-tn.tistory.com/32 //이항계수의 정의와 공식 참조
이항계수를 효율적으로 계산하기 위해 DP를 적용시켰다.

