▶ 11047.cs (최하)
최소의 동전개수로 k원을 만드는 문제
-> 그저 소지한 화폐중 가장 가치가 높은 것 부터 순회하며 포함시킬 수 있는 만큼 최대로 포함시키면 된다.
즉 4570원을 만들어야하고 1000원 500원 100원 50원 10원 1원 을 갖고 있다고 할때
1000원 4개 500원 1개 50원 1개 10원 2개 를 주는 방식이 동전의 수가 최소가 되는 경우다.


▶ 11399.cs (최하)
ATM기에서 대기하는 손님들이 모두 각자의 작업을 처리하는데까지 걸리는 시간의 합을 최소로 만드는 문제.
-> 작업시간이 긴 손님이 앞에 존재하면 총 대기시간이 길어질 수 밖에 없으므로, 작업시간이 짧은 손님들을
앞에 배치시켜서 빠르게 회전될 수 있도록 유도하면 된다.


▶ 1541.cs (하)
주어진 연산식에 알맞게 괄호를 쳐서 만들 수 있는 연산값의 최소값을 구하는 문제.
-> - 기호가 나올때마다 뒤에 따라 붙는 숫자들을 괄호로 묶어 모두 음수값으로 만들어주는 것이 풀이법이다.
고로 입력받은 총 문자열을 - 를 기준으로 스플릿해주면 음수로 묶어내기 쉽다.
ex) 1 - 2 + 3 - 4 + 5 - 6 + 7
-> 스플릿 : 1, 2 + 3, 4 + 5, 6 + 7

이제 스플릿된 해당 요소들내에 + 연산을 진행해준다.
-> 1, 5, 9, 13

첫번째 요소는 무조건 양수이므로 첫번째 요소를 제외하고 모두 빼준다.
1 - 5 - 9 - 13
= -26

▶ 13305.cs (하)
한 도시에서 다른 목적지의 도시까지 이동하는데 소요되는 총 주유비용중 최소값을 구하는 문제.
그리디하게 각 도시에서 최소의 비용을 사용할 수 있게 주유를 해야 하기 때문에, 주유비용 배열을
순회하면서 현재 주유비용보다 작은값이 나올때마다 바꿔 주어 계산하면된다.

거리	2	3	1
비용  5         2           4         1

일때 첫 비용은 무조건 5원이기 때문에  5x2를 통해 두번째 도시로 넘어간다.
두번째 도시가 비용이 더 싸기 때문에 현재 비용을 2원으로 변경하고 다음 도시로 넘어간다.
4원은 더 비싸기 때문에 2원을 유지해서 다음 도시로 넘어간다. -> 이 점이 중요한 포인트!★★★
비싸기 때문에 기존 가격으로 넘어간다는 것은 2원 도시에 도착해서 더 많은 기름을 충전 후 
출발했다는 의미가 된다.


▶ 1931.cs (중)
한 회의실에 시간이 겹치지않게 예약할 수 있는 가장 많은 회의 수를 구하는 문제.
한.. 3년전에 교수님이 알려주셨던 문제여서 풀어본 기억이나서 금방 풀 수 있었던 문제다.
하지만 완벽히 기억하고있지 못했기 때문에, 오로지 끝나는 시간을 기준으로 정렬한 후
빨리 끝나는 회의들을 선택하게끔 풀어냈더니 반례가 존재해 통과에 실패했다.
생각해보니 끝나는 시간을 기준으로만 정렬했기 때문에, 끝나는 시간이 같을 경우 시작시간이
더 빠른 회의를 앞에 배치해야 즉 선택되게끔 유도해야 더 많은 회의를 고를 수 있다는 것을 알 수 있었다.
-> 만약 end시간이 같을 경우 start 시간을 기준으로 정렬하도록 수정해 통과했다.

ex)
(3,3) (2,3) (3,3)
위와 같이 정렬되어있다면 최대 회의 수는 2개가 되지만.

(2,3) (3,3) (3,3)
위 처럼 정렬한다면 최대 회의 수는 3개가 된다는 점!