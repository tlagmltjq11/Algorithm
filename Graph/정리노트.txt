▶ 1260.cs
그래프를 c#으로 직접 구현하고 BFS, DFS의 구현을 복기하는데 도움을 주는 문제이다.
기존 c언어로 그래프를 구현할때에는 인접행렬 혹은 연결리스트를 통한 인접리스트로 구현했는데
c#에서는 포인터 연산자가 없다보니 전부 코드를 뜯어고쳐야 했다. 여기까지는 문제가 없었지만
인접리스트를 배열로 관리하는것이 너무 비효율적이고 문제에서 요구하는 작은 정점부터 방문! 이라는 조건을
충족하기에도 매우 비효율적인 구조를 갖고있었다. 그리하여 List를 이용하는 그래프로 재구현하였고
해당 방식이 메모리 관리 측면에서 더 효율적인 방법이라 생각되었다.

▶ 2606.cs
특정 정점과 경로가 존재하는 모든 정점들의 개수를 구하면 되는 문제였다.
고로 DFS, BFS 어느것으로 풀어도 상관없다. 정점에 방문할때마다 카운트만 올려주면되는 단순한 문제이다.

▶ 2667.cs
0과 1로 이루어진 행렬을 차례대로 순회하면서 1값을 갖고있으면서 방문된적이 없다면 해당 숫자는 1개 혹은 그 이상으로
이루어진 단지이게 된다. 고로 해당 정점부터 DFS를 수행해서 해당 단지내에 속하는 모든 정점의 갯수를 세주면 되는 문제이다.
단 인접한 정점들을 체크할때 기존과 다르게 인접행렬 혹은 인접리스트 방식이 아닌 상하좌우로 체크해야 하는 점을
유의하면 된다.