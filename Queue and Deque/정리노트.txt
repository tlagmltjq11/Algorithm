▶ 18258.cs
원형큐를 직접 구현해보는 문제

▶ 2164.cs
카드를 쌓아놓고, 맨위 카드를 버린 후 그 다음 카드를 카드 뭉치의 맨 아래에 위치시키는 방식을
반복할때 마지막으로 남는 카드를 구하는 문제이다. 카드 뭉치의 맨 위 카드부터 차례대로
순회하는데 이때 카드뭉치의 맨 아래에 위치시키는 카드는 자신의 위에 존재하는 모든 카드가 순회되어야
자신의 차례가 온다. 즉 FIFO의 구조로 순회한다는 것이기 때문에 큐를 이용하는 문제인것이다.

▶ 11866.cs
2164와 유사한 문제다. 그저 조건만 달라졌을뿐

▶ 1966.cs
큐에 존재하는 데이터들을 차례대로 출력하는것이 아닌, 우선순위에 따라서 출력하게끔 해야하는데
맨앞에 존재하는 데이터의 우선순위가 뒤에 존재하는 데이터의 우선순위보다 작다면, 출력하는것이 아니라
큐의 맨뒤에 위치시켜주어야 한다. 이때 특정 인덱스의 데이터가 몇번째로 출력되는지 구하는 문제다.
문제에 어려운 조건은 없지만, C#에서 큐 내부를 인덱스로 순회할 수 없기 때문에 toArray로 변환시켜줘야하는
문제가 있었다.

▶ 10866.cs
c#으로 덱을 구현하는 문제. -> 덱의 header, tail 노드를 new하지않고 포인터 처럼만 사용해서
구현할 수도 있는데 이 문제에서는 new 하는 방식으로 구현했다. 다음번에는 굳이 메모리를
낭비하지 않도록 구현해봐야한다.★
https://freestrokes.tistory.com/86 참고

▶ 5430.cs
현재 그냥 리스트를 이용해서 꼼수(?)를 사용해서 웬만한 모든 예제를 통과하게 구현했지만,
어느 부분인지 런타임에러가 난다. 해당 부분을 추후 수정해야하며 덱 자료구조를 이용해서도
풀이를 진행해봐야 한다.